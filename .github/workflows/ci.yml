name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  unix-like:
    strategy:
      fail-fast: true
      matrix:
        runs-on: [ ubuntu-20.04, macos-10.15 ]
        benchmark: [ true, false ]
        include:
          - runs-on: ubuntu-20.04
            compiler: 'clang'
            benchmark: false
          - runs-on: ubuntu-20.04
            env:
              USE_CLANG_COMPLETER: false
            benchmark: false
            
    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install Java
      if: matrix.benchmark == false
      uses: actions/setup-java@v2
      with:
        java-version: 11
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: [ '3.6' ]
    - name: Install Go
      if: matrix.benchmark == false
      uses: actions/setup-go@v2
      with:
        stable: true
    - name: Install GCC
      if: runner.os == 'Linux' && matrix.compiler != 'clang'
      run: |
        sudo apt-get update
        sudo apt-get install gcc-8 g++-8
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100
    - name: Install Clang
      if: runner.os == 'Linux' && matrix.compiler == 'clang'
      run: |
        sudo apt-get update
        sudo apt-get install clang-7
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/clang-7 100
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++-7 100
    - name: Run pip and prepare codecov
      if: matrix.benchmark == false
      run: |
        sudo apt-get install python3-pip
        pip install -r test_requirements.txt
        echo -e "import coverage\ncoverage.process_startup" > /usr/lib/python3.6/site-packages/sitecustomize.py
    - name: Run tests
      if: matrix.benchmark == false
      run: python3 run_tests.py --no-paallel
    - name: Run benchmarks
      if: matrix.benchmark == true
      run: python3 benchmark.py --no-parallel
    - name: Send coverage data
      if: matrix.benchmark == false
      run: codecov --name ${{ matrix.python }}-${{ matrix.runs-on }}



  linux_lint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install Python
      uses: deadsnakes/action@v2.1.1
      with:
        python-version: 3.9.1
        debug: true
    - name: Install GCC
      run: |
        sudo apt-get update
        sudo apt-get install gcc-8 g++-8
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100
    - name: Install clang-tidy
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo apt-get update
        sudo apt-get install -y clang-tidy libc6-dbg build-essential
        sudo update-alternatives --install /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-10 100
    - name: Install valgrind
      run: |
        wget https://sourceware.org/pub/valgrind/valgrind-3.16.1.tar.bz2
        tar xf valgrind-3.16.1.tar.bz2
        pushd valgrind-3.16.1
        ./configure && make -j3 && sudo make install
        popd
    - name: Lint
      run: |
        YCM_TESTRUN=1 python build.py --clang-completer --clang-tidy --valgrind
        python3 run_tests.py --valgrind --skip-build --no-flake8 
      

  windows:
    strategy:
      fail-fast: true
      matrix:
        runs-on: [ windows-2019 ]
        benchmark: [ true, false ]
        python-arch: [ 'x64', 'x86' ]
        exclude:
          - runs-on: windows-2019
            benchmark: true
            python-arch: 'x86'
        include:
          - runs-on: windows-2016
            benchmark: false
            python-arch: 'x64'
    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Install Java
      if: matrix.benchmark == false
      uses: actions/setup-java@v2
      with:
        java-version: 11
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: [ '3.9' ]
        architecture: matrix.python-arch
    - name: Install Go
      if: matrix.benchmark == false
      uses: actions/setup-go@v2
      with:
        stable: true
    - name: Run pip and prepare codecov
      if: matrix.benchmark == false
      run: |
        python3 -m pip install -r test_requirements.txt
        echo import coverage > C:\\Python\\Lib\\site-packages\\sitecustomize.py
        echo coverage.process_startup() >> C:\\Python\\Lib\\site-packages\\sitecustomize.py
    - name: Run benchmarks
      if: matrix.benchmark == true
      run: python3 benchmark.py --no-parallel
    - name: Run tests
      if: matrix.benchmark == false
      run: python3 run_tests.py --no-parallel
    - name: Upload coverage data
      if: matrix.benchmark == false
      run: codecov --name ${{ matrix.python }}-${{ matrix.runs-on }}


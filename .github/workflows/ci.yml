name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  unix-like:
    env:
      USE_CLANG_COMPLETER: false
      COVERAGE: false
    name: "ubuntu-20.04 - ${{ matrix.name_suffix }} test-run"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        detached: true
    - uses: actions/cache@v3
      with:
        key: v2-deps-${{ runner.os }}-${{ hashFiles( 'build.py' ) }}
        restore-keys: |
          v2-deps-${{ runner.os }}-
          v1-deps-${{ runner.os }}-
        path: |
          third-party/clangd/cache
          third_party/eclipse.jdt.ls/target/cache
          third_party/go
          third_party/omnisharp-roslyn/v[0-9]*
      name: Cache dependencies

    - uses: actions/cache@v3
      with:
        key: v2-testdeps-${{ runner.os }}-${{ hashFiles( 'run_tests.py' ) }}
        restore-keys: |
          v2-testdeps-${{ runner.os }}-
          v1-testdeps-${{ runner.os }}-
        path: |
          third-party/lombok/cache
          ~/.npm
      name: Cache test deps

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Install GCC
      run: |
        sudo apt-get update
        sudo apt-get install gcc-8 g++-8
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-8 100
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-8 100
    - name: Run pip and prepare coverage
      run: |
        python3 -m pip install -r test_requirements.txt
        echo -e "import coverage\ncoverage.process_startup()" > $(python -c "print(__import__('sysconfig').get_path('purelib'))")/sitecustomize.py
    - name: Run tests
      run: python3 run_tests.py --quiet
    - name: Combine and summarise coverage
      run: coverage combine && coverage xml
    - name: Upload coverage data
      uses: codecov/codecov-action@v3
      with:
        name: "ubuntu-20.04-${{ matrix.name_suffix }}-tests"
        token: ${{ secrets.CODECOV_TOKEN }}
        gcov: true
